---
- name: Check if atomic-openshift-master exists
  shell: systemctl status atomic-openshift-master
  ignore_errors: "True"
  register: master_service

- name: Check if atomic-openshift-master-controllers exists
  shell: systemctl status atomic-openshift-master-controllers
  ignore_errors: "True"
  register: master_service_controllers

- name: Check if atomic-openshift-master-api exists
  shell: systemctl status atomic-openshift-master-api
  ignore_errors: "True"
  register: master_service_api

- name: restart master api - cluster with single master
  become: "True"
  run_once: "True"
  ignore_errors: "True"
  delegate_to: "{{ item }}"
  systemd: name=atomic-openshift-master state=restarted
  register: restart_master_api
  when:
    - master_service.stdout.find('Loaded:')
    - (files_copied|changed or masterconfig_extracss|changed or masterconfig_loginpage|changed)

- name: restart master controllers - cluster with multiple masters
  become: "True"
  run_once: "True"
  ignore_errors: "True"
  delegate_to: "{{ item }}"
  systemd: name=atomic-openshift-master-controllers state=restarted
  register: restart_master_api
  when:
    - master_service_controllers.stdout.find('Loaded:')
    - (files_copied|changed or masterconfig_extracss|changed or masterconfig_loginpage|changed)


- name: restart master api - cluster with multiple masters
  become: "True"
  run_once: "True"
  delegate_to: "{{ item }}"
  ignore_errors: "True"
  systemd: name=atomic-openshift-master-api state=restarted
  register: restart_master_api
  when:
    - master_service_api.stdout.find('Loaded:')
    - (files_copied|changed or masterconfig_extracss|changed or masterconfig_loginpage|changed)

- name: Waiting for service to be up on first master
  run_once: "True"
  delegate_to: "{{ item }}"
  wait_for:
    host: "{{ item }}"
    port: 8443
    delay: 1
    connect_timeout: 1
  when: restart_master_api|changed
